// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: genre.sql

package database

import (
	"context"
)

const listGenres = `-- name: ListGenres :many
SELECT id, name FROM genres
ORDER BY id
LIMIT $1
OFFSET $2
`

type ListGenresParams struct {
	Limit  int64
	Offset int64
}

func (q *Queries) ListGenres(ctx context.Context, arg ListGenresParams) ([]Genre, error) {
	rows, err := q.db.QueryContext(ctx, listGenres, arg.Limit, arg.Offset)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Genre{}
	for rows.Next() {
		var i Genre
		if err := rows.Scan(&i.ID, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
